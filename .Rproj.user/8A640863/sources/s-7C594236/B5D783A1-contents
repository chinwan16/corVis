---
title: "Using assocs with other packages"
author: "Amit Chinwan and Catherine Hurley"
date: "`r Sys.Date()`"
output:
  rmarkdown::html_vignette:
     toc: true
vignette: >
  %\VignetteIndexEntry{Using assocs with other packages}
  %\VignetteEncoding{UTF-8}
  %\VignetteEngine{knitr::rmarkdown}
editor_options: 
  chunk_output_type: console
---

```{r global options, echo=FALSE}
knitr::opts_chunk$set(warning=FALSE, message=FALSE,echo=FALSE,fig.height = 5, fig.width = 5,
                      fig.align = 'left')
```

corVis is an R package which calculates measures of association for variable pairs in a dataset and visualizes these measures using matrix and linear layouts. The package also offers to calculate and visualise the pairwise association measures conditionally at different levels of a grouping variable. This vignette focuses on using the calculated association measures with other R packages which provide correlation displays.


```{r, setup}
if (!requireNamespace("palmerpenguins", quietly = TRUE))
  install.packages("palmerpenguins")

library(corVis)
library(palmerpenguins)
library(dplyr)
library(kableExtra)
library(ggplot2)
```


## Calculating association measures


The package provides a collection of various measures of association which can be used to quantify the relationship between two variables and could be used to explore patterns prior to modeling. The measures available in the package are not limited to *numeric* variables only and can be used with *categorical* and *ordinal* variables as well. Table 1 lists the different measures of association provided in the package with the variable types they can be used with, the package used for calculation, the information on whether the measure is symmetric, and the minimum and maximum value of the measure.


```{r}
measures <- dplyr::tribble(
  ~name, ~nn, ~ff, ~oo, ~nf, ~from, ~range,
  "tbl_cor", "y", " ", " " ," ", "stats::cor", "[-1,1]",
  "tbl_dcor", "y", " ", " ", " ", "energy::dcor2d", "[0,1]",
  "tbl_mine", "y", " ", " ", " ", "minerva::mine", "[0,1]",
  "tbl_ace", "y", "y", " ", "y", "corVis", "[0,1]",
  "tbl_cancor", "y", "y", " ","y", "corVis", "[0,1]",
  "tbl_nmi",  "y", "y", " ", "y", "linkspotter::maxNMI", "[0,1]",
  "tbl_polycor", " ", " ","y", " ", "polycor::polychor", "[-1,1]",
  "tbl_tau", " ", " ","y", " ", "DescTools::KendalTauA,B,C,W", "[-1,1]",
  "tbl_gkGamma", " ", " ", "y", " ", "DescTools::GoodmanKruskalGamma", "[-1,1]",
  "tbl_gkTau", " ", " ", "y", " ", "DescTools::GoodmanKruskalTau", "[0,1]",
  "tbl_uncertainty", " ",  "y", " ", " ", "DescTools::UncertCoef", "[0,1]",
  "tbl_chi", " ",  "y", " ", " ", "DescTools::ContCoef", "[0,1]"
)

kableExtra::kbl(measures,booktabs = T) %>% kableExtra::kable_styling(latex_options = "scale_down")
```
Table 1: Table of association measures available in the package corVis

We introduce a method which creates a tibble structure for the variable pairs in a dataset along with calculated association measure. The package contains various functions (shown in Table 1) for different association measures in the form `tbl_*`. For example, a user might be interested in calculating distance correlation for numeric pair of variables in a dataset. This can be done by using `tbl_dcor`. 

```{r, echo=TRUE}
df <- penguins
names(df) <- c("species","island", "bill_l", "bill_d", "flipper_l", "body_m", "sex", "year" )
distance <- tbl_dcor(df)
glimpse(distance)
```

## Calculating association measures for whole dataset

`calc_assoc` can be used to calculate association measures for all the variable pairs in the dataset in a tibble structure. In addition to tibble structure, the output also has *paiwise* and *data.frame* class which are important for producing visual summaries in this package. 

```{r,echo=TRUE}
complete_assoc <- calc_assoc(df)
glimpse(complete_assoc)
class(complete_assoc)
```

More details on calculating association measures and conditional association measures can be found in vignette **Calculating associations using corVis** accompanying the package.

## Visualising association using `corrplot`

The package \CRANpkg{corrplot} provides an implementation of the methods in Friendly (2002) and produces displays in matrix layout. The correlation displays in the package are only applicable to numeric variables in a dataset. Figure 1 shows the correlation plot of the numeric variables in penguins data.

```{r , corrplot,echo=TRUE }
library(corrplot)
df_num <- df |>
  select(where(is.numeric))
  
corrplot(cor(df_num,use = "pairwise.complete.obs"))
```

Figure 1: Correlation plot for penguins data using `corrplot`.

In \CRANpkg{corVis}, we calculate association measures for all variables irrespective of their type and then display these measures with different layouts. After calculating measures we can use other packages which provide correlation displays and support tidy structure of association measures to visualize association in a dataset. Figure 2 provides an example where the association measures are first calculated using \CRANpkg{corVis} and then displayed using \CRANpkg{corrplot}. The plot show strong association for species and other numeric variables suggesting the body measurements differ for different species of penguins.

```{r, corrplot_assoc, echo=TRUE}
library(corrplot)
penguins_assoc <- calc_assoc(df)

penguins_assoc_mat <- matrix_assoc(penguins_assoc)

corrplot(penguins_assoc_mat, diag = F)
```

Figure 2: Association plot for penguins data using association measures calculated by `corVis` and visulaized with `corrplot`.



## Visualising association using `linkspotter`

The \CRANpkg{linkspotter} calculates and visualizes association for numeric and factor variables using a network layout plot. The nodes show the variables and the edges represent the measure of association between pair of variables. The width of edge maps to absolute correlation among the nodes. Two nodes are connected if the `corMethod` is defined for the variable pairs.
```{r, linkspotter, echo=TRUE}
library(linkspotter)

corCouples<-multiBivariateCorrelation(df)
linkspotterGraph(corDF = corCouples, corMethod = "pearson", smoothEdges = FALSE, 
  dynamicNodes = FALSE)
```

Figure 3: Association display for penguins data in a network layout.



```{r, linkspotter_assoc,echo=TRUE, eval=FALSE}
penguins_assoc <- calc_assoc(df)

corCouples<-multiBivariateCorrelation(df)
corCouples$pearson <- penguins_assoc$measure

linkspotterGraph(corDF = corCouples,corMethod = "pearson", smoothEdges = FALSE, 
  dynamicNodes = FALSE)
```


Figure 4: Association display for penguins data with association measures calculated using `corVis`


## Visualising association using `corrr`

Another package useful for exploring correlations is `corrr`. The main focus of the package is to create dataframes of correlation instead of matrices, which then can be explored by leveraging tools from *tidyverse*. 

```{r, corrr,echo=TRUE}
library(corrr)
cor_df <- correlate(df_num)
glimpse(cor_df)
rplot(cor_df) + 
  theme(axis.text = element_text(size = 7),
        axis.text.x = element_text(angle=30, hjust=1))
```

Figure 5: Association display for penguins data using `corrr`


Similar to `corrplot`, the packge `corrr` doesn't support variables other than numeric. An analyst can calculate association measures for every variable pair using `corVis` and then display these measures using the visualizations offered by the `corrr`.

```{r, corrr_assoc,echo=TRUE}
penguins_assoc <- calc_assoc(df)
penguins_assoc_mat <- matrix_assoc(penguins_assoc)
penguins_assoc_df <- as.data.frame(penguins_assoc_mat)
rplot(penguins_assoc_df) + 
  theme(axis.text = element_text(size = 7),
        axis.text.x = element_text(angle=30, hjust=1))
```
Figure 6: Association display for penguins data with association measures calculated using `corVis` and displayed using `corrr`

We can also display association measures using network layout with `corrr` for displaying the variables pairs having a higher value for association measures than a threshold. Figure 7 displays variable pairs in a network layout where measure value is greater than $0.4$.

```{r, corrr_assoc_nw,echo=TRUE}
network_plot(penguins_assoc_df,min_cor = 0.4)
```
Figure 7: Association display in a network layout


## Visualising association using `corrgrapher`

Another package for displaying correlations in a network layout is `corrgrapher`. The network display is interactive and produced for every variable pair in a dataset, where the highly correlated variables (calculate comparable correlation coefficients for different types of variable pairs) are put closer to each other. Also, the edge width is proportional to the magnitude of the correlation value. The display also has an option to look at the distribution of a variable by clicking on the corresponding node/variable in the plot or selecting the variable from the drop down. Below is an example of the network plot.

```{r}
library(corrgrapher)
corrgrapher(df)
```

Figure 8: Correlation network using `corrgrapher`

Alternatively, we can use `corVis` for calculating pairwise association measures and display it using `corrgrapher`. In order to display a network layout, we will need to convert the tibble of calculated measures to a matrix. Figure 9 shows the network plot calculated association measures using `corVis`.

```{r}
assoc_df <- calc_assoc(df)
assoc_df_mat <- matrix_assoc(assoc_df)
corrgrapher(assoc_df_mat)
```

Figure 9: Association network plot for penguins data

The only limitation with this display is that the plot for individual variables lose its signficance when used with matrix input. 


