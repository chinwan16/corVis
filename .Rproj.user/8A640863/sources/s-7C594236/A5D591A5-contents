plot_assoc_linear <- function(assoc, group_var = NULL,fill="default",
                             var_order = "default",plot_type = c("heatmap","dotplot"), limits=c(-1,1)){
  
  plot_type = match.arg(plot_type)
  
  if (isTRUE(var_order == "default")){
    assoc$z <- paste0(assoc$x, sep=":", assoc$y)
    assoc <- dplyr::arrange(assoc,dplyr::desc(abs(.data$measure)))
    assoc$z <- forcats::fct_inorder(assoc$z)
    
  } else {
    
    if ("by" %in% names(assoc)){
      assoc <- assoc %>%
        dplyr::group_by(.data$x,.data$y) %>%
        dplyr::summarize(.data$measure,.data$measure_type,.data$by,max_diff = max(.data$measure, na.rm=TRUE) - min(.data$measure, na.rm=TRUE),.groups = 'drop')
      assoc$z <- paste0(assoc$x, sep=":", assoc$y)
      assoc <- dplyr::arrange(assoc,dplyr::desc(.data$max_diff))
      assoc$z <- forcats::fct_inorder(assoc$z)
    } else{
      assoc$z <- paste0(assoc$x, sep=":", assoc$y)
      var_order <- assoc %>% dplyr::group_by(.data$z) %>%
        dplyr::summarise(max_diff=diff(range(.data$measure))) %>%
        dplyr::arrange(.data$max_diff) %>% dplyr::pull(.data$z)
      }
    
  }
  
  if (fill =="default" & !is.null(group_var)){
    if (group_var %in% names(assoc)) fillvar <- group_var
    else fillvar <- "measure_type"
  }
  else fillvar <- fill
  if(is.null(group_var)) group_var<-"NULL"
  
  if (is.null(limits)) {
    limits <- range(.data$lassoc$measure, na.rm=TRUE)
    limits <- range(labeling::rpretty(limits[1], limits[2]))
  }
  
  by_var <- attr(assoc,"by_var")
  
  
  p <- ggplot2::ggplot(assoc) +
    ggplot2::theme(legend.position = "top",
                   axis.title.y  = ggplot2::element_blank()) 
  
  if (plot_type == "heatmap"){
    
    p <- p +
      {if(group_var=="NULL") ggplot2::geom_tile(ggplot2::aes(x=.data$measure_type,y=.data$z,fill=.data$measure))} +
      {if(group_var=="measure_type") ggplot2::geom_tile(ggplot2::aes(x=.data$measure_type,y=.data$z,fill=.data$measure))} +
      {if(group_var=="by") ggplot2::geom_tile(ggplot2::aes(x=.data$by,y=.data$z,fill=.data$measure))} +
      ggplot2::scale_fill_gradient2(low="blue", mid="white", high="brown",na.value="grey95",limits=limits)+
      ggplot2::scale_x_discrete(position = "top") +
      #ggplot2::scale_y_discrete(limits=rev) +
      ggplot2::theme(axis.title.x = ggplot2::element_blank(),
                     axis.text.x = ggplot2::element_text(angle = 45, hjust = 0, vjust = 0),
                     panel.grid.major = ggplot2::element_blank(),
                     panel.grid.minor = ggplot2::element_blank(),
                     panel.background = ggplot2::element_rect(fill = "grey95"))
    
  } else {
    
    p <- p +
      ggplot2::geom_hline(yintercept = 0) +
      {if(group_var=="NULL") ggplot2::geom_point(ggplot2::aes(x=.data$z,y=.data$measure,colour=.data$measure_type))} +
      {if(group_var=="measure_type") ggplot2::geom_point(ggplot2::aes(x=.data$z,y=.data$measure,colour=.data$measure_type))} +
      {if(group_var=="by") ggplot2::geom_point(ggplot2::aes(x=.data$z,y=.data$measure,colour=.data$by)) } +
      ggplot2::ylim(-1,1) +
      ggplot2::coord_flip() +
      ggplot2::scale_x_discrete(limits=rev) +
      ggplot2::labs(colour = by_var)
  }
  suppressWarnings(print(p))
}
